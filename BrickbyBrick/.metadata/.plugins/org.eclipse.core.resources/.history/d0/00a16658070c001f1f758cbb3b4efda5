package Pages;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Pos;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Modality;
import javafx.stage.Stage;

public class SearchByCategory {
    private final VBox root;
    private final HBox buttons;
    private final ComboBox<String> assetCategoryDropdown;
    private final ListView<String> resultsListView;

    public SearchByCategory() {
        root = new VBox(20);
        root.setStyle("-fx-background-color: cornflowerblue; -fx-padding: 10px;");

        buttons = new HBox(20);
        buttons.setAlignment(Pos.CENTER);

        Label categoryMainLbl = new Label("Search Asset(s) by Category");
        categoryMainLbl.setStyle("-fx-font-size: 24px;");

        Label assetCategoryDropLbl = new Label("Select Asset Category from dropdown menu:");
        assetCategoryDropdown = new ComboBox<>();
        ObservableList<String> categories = readFromFile("category_data.txt");
        assetCategoryDropdown.setItems(categories);

        resultsListView = new ListView<>();
        resultsListView.setPrefSize(400, 300);

        Button homeButton = new Button("Return to Homepage");
        Button searchCategoryButton = new Button("Search");

        buttons.getChildren().addAll(homeButton, searchCategoryButton);
        root.getChildren().addAll(categoryMainLbl, assetCategoryDropLbl, assetCategoryDropdown, resultsListView, buttons);

        homeButton.setOnAction(e -> {
            Stage primaryStage = (Stage) homeButton.getScene().getWindow();
            HomeScreen homeScreen = new HomeScreen(primaryStage);
            primaryStage.setScene(new Scene(homeScreen.getRoot(), 800, 800));
            primaryStage.setTitle("Home Page");
        });

        searchCategoryButton.setOnAction(e -> {
            String selectedCategory = assetCategoryDropdown.getValue();
            performSearch(selectedCategory);
        });

        setupListViewDoubleClick();
    }

    // set up the listener for the double click to open window with asset information 
    private void setupListViewDoubleClick() {
        resultsListView.setOnMouseClicked(event -> {
            if (event.getClickCount() == 2 && !resultsListView.getSelectionModel().isEmpty()) {
                String selectedItem = resultsListView.getSelectionModel().getSelectedItem();
                openDetailWindow(selectedItem);
            }
        });
    }

    // function to open the window that has all of the asset details 
    private void openDetailWindow(String assetDetails) {
        String[] parts = assetDetails.split(",");

        Stage detailStage = new Stage();
        VBox layout = new VBox(10);
        layout.setAlignment(Pos.CENTER);
        layout.setStyle("-fx-background-color: cornflowerblue; -fx-padding: 20;");

        for (String part : parts) {
            layout.getChildren().add(new Label(part));
        }

        Button closeButton = new Button("Close");
        closeButton.setOnAction(e -> detailStage.close());
        layout.getChildren().add(closeButton);

        Scene scene = new Scene(layout, 400, 300);
        detailStage.setScene(scene);
        detailStage.setTitle("Asset Details");
        detailStage.initModality(Modality.APPLICATION_MODAL);
        detailStage.showAndWait();
    }

    // Function to read from the file 
    private ObservableList<String> readFromFile(String filename) {
        ObservableList<String> items = FXCollections.observableArrayList();
        try (BufferedReader br = new BufferedReader(new FileReader(filename))) {
            String line;
            while ((line = br.readLine()) != null) {
                items.add(line);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return items;
    }

    private void performSearch(String category) {
        ObservableList<String> filteredAssets = FXCollections.observableArrayList();
        try (BufferedReader br = new BufferedReader(new FileReader("asset_data.csv"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length > 1 && parts[1].trim().equals(category.trim())) {
                    filteredAssets.add(line);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        resultsListView.setItems(filteredAssets);
    }

    public Parent getRoot() {
        return root;
    }
}
